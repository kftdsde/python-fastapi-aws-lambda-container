org: kifiya
app: kft-csengine
service: kft-csengine
frameworkVersion: ">=3.0.0"


# plugins:
#   - serverless-add-api-key
#   - serverless-vpc-discovery
  
custom:
  appName: csengine
  pythonRequirements:
    dockerizePip: true
  
  # apiKeys:    
  #   dev:
  #     - name: apikey
  #       value: ${ssm:/aws/reference/secretsmanager/dev/csengine-api-key}
  #       deleteAtRemoval: false # Retain key after stack removal
    # staging:
    #   - name: apikey
    #     value: ${ssm:/aws/reference/secretsmanager/staging/csengine-api-key}
    #     deleteAtRemoval: false # Retain key after stack removal
    # prod:
    #   - name: apikey
    #     value: ${ssm:/aws/reference/secretsmanager/prod/csengine-api-key}
    #     deleteAtRemoval: false # Retain key after stack removal
      
        
## Using module to load enviornment variables
useDotenv: true
provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "ecr:InitiateLayerUpload"
            - "ecr:SetRepositoryPolicy"
            - "ecr:GetRepositoryPolicy"
            - "ecr:DescribeImages"
          Resource:
            !Join 
              - ':'
              - - 'arn:aws:ecr'
                - Ref: AWS::Region
                - Ref: AWS::AccountId
                - 'repository/*'
  stackTags:
    App: ${self:provider.stage}-${self:custom.appName}
    CFStack: ${self:provider.stage}-${self:custom.appName}

   ## Give a custom stack name
  stackName: ${self:provider.stage}-${self:custom.appName}
  
  ## Define Environment Variables that will be available to Functions
  environment:
    LOG_LEVEL: "INFO"
    STAGE: ${self:provider.stage}

# package:
#   individually: true
#   patterns:
#     - "!*.txt"
#     - "!*.md"
#     - "!*.json"
#     - "!node_modules/**"
#     - "!layers/**"
#     - "!resources/**"
#     - "!src/**"
    
functions:
  csengine:
    name: ${self:provider.stage}-${self:custom.appName}
    description: ${self:provider.stage}-${self:custom.appName}
    image: 923083696216.dkr.ecr.${self:provider.region}.amazonaws.com/${self:provider.stage}-csengine:latest
    timeout: 30
    events: 
    - http:
        path: api/v1/
        method: get
        cors: true
#        private: true
        

plugins:
  - serverless-add-api-key
  - serverless-vpc-discovery
